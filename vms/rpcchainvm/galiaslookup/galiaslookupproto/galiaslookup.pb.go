// Code generated by protoc-gen-go. DO NOT EDIT.
// source: galiaslookup.proto

package galiaslookupproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LookupRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupRequest) Reset()         { *m = LookupRequest{} }
func (m *LookupRequest) String() string { return proto.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()    {}
func (*LookupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8db91dfd8bfd37e6, []int{0}
}

func (m *LookupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupRequest.Unmarshal(m, b)
}
func (m *LookupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupRequest.Marshal(b, m, deterministic)
}
func (m *LookupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupRequest.Merge(m, src)
}
func (m *LookupRequest) XXX_Size() int {
	return xxx_messageInfo_LookupRequest.Size(m)
}
func (m *LookupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupRequest proto.InternalMessageInfo

func (m *LookupRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type LookupResponse struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupResponse) Reset()         { *m = LookupResponse{} }
func (m *LookupResponse) String() string { return proto.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()    {}
func (*LookupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8db91dfd8bfd37e6, []int{1}
}

func (m *LookupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupResponse.Unmarshal(m, b)
}
func (m *LookupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupResponse.Marshal(b, m, deterministic)
}
func (m *LookupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupResponse.Merge(m, src)
}
func (m *LookupResponse) XXX_Size() int {
	return xxx_messageInfo_LookupResponse.Size(m)
}
func (m *LookupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupResponse proto.InternalMessageInfo

func (m *LookupResponse) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type PrimaryAliasRequest struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimaryAliasRequest) Reset()         { *m = PrimaryAliasRequest{} }
func (m *PrimaryAliasRequest) String() string { return proto.CompactTextString(m) }
func (*PrimaryAliasRequest) ProtoMessage()    {}
func (*PrimaryAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8db91dfd8bfd37e6, []int{2}
}

func (m *PrimaryAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimaryAliasRequest.Unmarshal(m, b)
}
func (m *PrimaryAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimaryAliasRequest.Marshal(b, m, deterministic)
}
func (m *PrimaryAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimaryAliasRequest.Merge(m, src)
}
func (m *PrimaryAliasRequest) XXX_Size() int {
	return xxx_messageInfo_PrimaryAliasRequest.Size(m)
}
func (m *PrimaryAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimaryAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimaryAliasRequest proto.InternalMessageInfo

func (m *PrimaryAliasRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type PrimaryAliasResponse struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimaryAliasResponse) Reset()         { *m = PrimaryAliasResponse{} }
func (m *PrimaryAliasResponse) String() string { return proto.CompactTextString(m) }
func (*PrimaryAliasResponse) ProtoMessage()    {}
func (*PrimaryAliasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8db91dfd8bfd37e6, []int{3}
}

func (m *PrimaryAliasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimaryAliasResponse.Unmarshal(m, b)
}
func (m *PrimaryAliasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimaryAliasResponse.Marshal(b, m, deterministic)
}
func (m *PrimaryAliasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimaryAliasResponse.Merge(m, src)
}
func (m *PrimaryAliasResponse) XXX_Size() int {
	return xxx_messageInfo_PrimaryAliasResponse.Size(m)
}
func (m *PrimaryAliasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimaryAliasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimaryAliasResponse proto.InternalMessageInfo

func (m *PrimaryAliasResponse) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func init() {
	proto.RegisterType((*LookupRequest)(nil), "galiaslookupproto.LookupRequest")
	proto.RegisterType((*LookupResponse)(nil), "galiaslookupproto.LookupResponse")
	proto.RegisterType((*PrimaryAliasRequest)(nil), "galiaslookupproto.PrimaryAliasRequest")
	proto.RegisterType((*PrimaryAliasResponse)(nil), "galiaslookupproto.PrimaryAliasResponse")
}

func init() { proto.RegisterFile("galiaslookup.proto", fileDescriptor_8db91dfd8bfd37e6) }

var fileDescriptor_8db91dfd8bfd37e6 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x4f, 0xcc, 0xc9,
	0x4c, 0x2c, 0xce, 0xc9, 0xcf, 0xcf, 0x2e, 0x2d, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12,
	0x44, 0x16, 0x03, 0x0b, 0x29, 0xa9, 0x72, 0xf1, 0xfa, 0x80, 0xb9, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0x22, 0x5c, 0xac, 0x60, 0x45, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10,
	0x8e, 0x92, 0x02, 0x17, 0x1f, 0x4c, 0x59, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x10, 0x1f, 0x17,
	0x53, 0x66, 0x0a, 0x58, 0x11, 0x4f, 0x10, 0x53, 0x66, 0x8a, 0x92, 0x2a, 0x97, 0x70, 0x40, 0x51,
	0x66, 0x6e, 0x62, 0x51, 0xa5, 0x23, 0x48, 0x07, 0xcc, 0x38, 0x74, 0x65, 0x3a, 0x5c, 0x22, 0xa8,
	0xca, 0xa0, 0xc6, 0x61, 0xb5, 0xd6, 0x68, 0x2f, 0x23, 0x17, 0x37, 0x58, 0x1d, 0xc4, 0x72, 0x21,
	0x5f, 0x2e, 0x36, 0x28, 0x4b, 0x41, 0x0f, 0xc3, 0x2f, 0x7a, 0x28, 0x1e, 0x91, 0x52, 0xc4, 0xa3,
	0x02, 0x6a, 0x69, 0x3c, 0x17, 0x0f, 0xb2, 0x63, 0x84, 0xd4, 0xb0, 0x68, 0xc1, 0xe2, 0x29, 0x29,
	0x75, 0x82, 0xea, 0x20, 0x16, 0x24, 0xb1, 0x81, 0xe5, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x86, 0x53, 0x17, 0x7b, 0x8d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AliasLookupClient is the client API for AliasLookup service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AliasLookupClient interface {
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error)
	PrimaryAlias(ctx context.Context, in *PrimaryAliasRequest, opts ...grpc.CallOption) (*PrimaryAliasResponse, error)
}

type aliasLookupClient struct {
	cc grpc.ClientConnInterface
}

func NewAliasLookupClient(cc grpc.ClientConnInterface) AliasLookupClient {
	return &aliasLookupClient{cc}
}

func (c *aliasLookupClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error) {
	out := new(LookupResponse)
	err := c.cc.Invoke(ctx, "/galiaslookupproto.AliasLookup/Lookup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aliasLookupClient) PrimaryAlias(ctx context.Context, in *PrimaryAliasRequest, opts ...grpc.CallOption) (*PrimaryAliasResponse, error) {
	out := new(PrimaryAliasResponse)
	err := c.cc.Invoke(ctx, "/galiaslookupproto.AliasLookup/PrimaryAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AliasLookupServer is the server API for AliasLookup service.
type AliasLookupServer interface {
	Lookup(context.Context, *LookupRequest) (*LookupResponse, error)
	PrimaryAlias(context.Context, *PrimaryAliasRequest) (*PrimaryAliasResponse, error)
}

// UnimplementedAliasLookupServer can be embedded to have forward compatible implementations.
type UnimplementedAliasLookupServer struct {
}

func (*UnimplementedAliasLookupServer) Lookup(ctx context.Context, req *LookupRequest) (*LookupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lookup not implemented")
}
func (*UnimplementedAliasLookupServer) PrimaryAlias(ctx context.Context, req *PrimaryAliasRequest) (*PrimaryAliasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrimaryAlias not implemented")
}

func RegisterAliasLookupServer(s *grpc.Server, srv AliasLookupServer) {
	s.RegisterService(&_AliasLookup_serviceDesc, srv)
}

func _AliasLookup_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliasLookupServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/galiaslookupproto.AliasLookup/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliasLookupServer).Lookup(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AliasLookup_PrimaryAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimaryAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliasLookupServer).PrimaryAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/galiaslookupproto.AliasLookup/PrimaryAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliasLookupServer).PrimaryAlias(ctx, req.(*PrimaryAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AliasLookup_serviceDesc = grpc.ServiceDesc{
	ServiceName: "galiaslookupproto.AliasLookup",
	HandlerType: (*AliasLookupServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Lookup",
			Handler:    _AliasLookup_Lookup_Handler,
		},
		{
			MethodName: "PrimaryAlias",
			Handler:    _AliasLookup_PrimaryAlias_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "galiaslookup.proto",
}
